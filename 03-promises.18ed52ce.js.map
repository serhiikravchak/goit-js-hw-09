{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAWC,SAASC,cAAc,yBAClCC,EAAUF,SAASC,cAAc,QAmCvC,SAASE,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,GACFI,EAAQ,C,SAAEN,E,MAAUC,IACpBQ,QAAQC,IAAI,C,SAAEV,E,MAAUC,MAExBM,EAAO,C,SAAEP,E,MAAUC,IACnBQ,QAAQC,IAAI,C,SAAEV,E,MAAUC,I,GAEzBA,EAAM,G,CA7CbH,EAAQa,iBAAiB,UAEzB,SAAsBC,GACpBA,EAAIC,iBAEJlB,EAASmB,UAAW,EACpB,MACEC,UAAYd,MAAAe,EAAKC,KAAEA,EAAIC,OAAEA,IACvBN,EAAIO,cACR,IAAIC,EAAUC,OAAOL,EAAMM,OACvBC,EAASF,OAAOJ,EAAKK,OACrBE,EAAWH,OAAOH,EAAOI,OAEzBG,EAAaL,EAAUG,EAASC,EAEpC,GAAIJ,EAAU,GAAKG,EAAS,GAAKC,EAAW,EAErB,YADrB/B,EAAAiC,OAAOC,QAAQ,2BAIjB,IAAK,IAAIC,EAAW,EAAGA,GAAYJ,EAAUI,IAC3C7B,EAAc6B,EAAUR,GAASS,MAAK,EAAC7B,SAAEA,EAAQC,MAAEA,MACjDR,EAAAiC,OAAOI,QAAQ,uBAAqB9B,QAAiBC,MAAU,IAEhE8B,OAAM,EAAC/B,SAAEA,EAAQC,MAAEA,KAChBR,EAAAiC,OAAOC,QAAQ,sBAAoB3B,QAAeC,SAEtDmB,GAAWG,EAEbzB,EAAQkC,QAqBSC,EApBPR,EAqBVjB,YAAW,KACTb,EAASmB,UAAW,CAAK,GACzBmB,GAHJ,IAAmBA,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst startBtn = document.querySelector('button[type=\"submit\"]')\nconst formRef = document.querySelector('form')\n\nformRef.addEventListener('submit', onFormSubmit)\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n  startBtn.disabled = true;\n  const {\n    elements: { delay, step, amount }\n  } = evt.currentTarget;\n  let delayEl = Number(delay.value)\n  let stepEl = Number(step.value)\n  let amountEl = Number(amount.value)\n\n  let totalDelay = delayEl + stepEl * amountEl;\n\n  if (delayEl < 0 || stepEl < 0 || amountEl < 0) {\n    Notify.failure('Заповніть коректні дані')\n    return;\n  }\n\n  for (let position = 1; position <= amountEl; position++){\n    createPromise(position, delayEl).then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n    })\n    .catch(({ position, delay }) =>\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n    );\n    delayEl += stepEl  \n  }\n  formRef.reset();\n  handleBtn(totalDelay);\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  \n  return new Promise((Fulfill, Reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        Fulfill({ position, delay });\n        console.log({ position, delay })\n      } else {\n        Reject({ position, delay });\n        console.log({ position, delay })\n      }\n    }, delay);\n  });\n}\n\n\nfunction handleBtn(total) {\n  setTimeout(() => {\n    startBtn.disabled = false\n  },total)  \n}"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$startBtn","document","querySelector","$47d4ff9957288465$var$formRef","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","Fulfill","Reject","setTimeout","console","log","addEventListener","evt","preventDefault","disabled","elements","delay1","step","amount","currentTarget","delayEl","Number","value","stepEl","amountEl","totalDelay","Notify","failure","position1","then","success","catch","reset","total"],"version":3,"file":"03-promises.18ed52ce.js.map"}