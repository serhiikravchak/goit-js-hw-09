{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAWC,SAASC,cAAc,yBAClCC,EAAUF,SAASC,cAAc,QAmCvC,SAASE,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,GACFI,EAAQ,CAAEN,WAAUC,UACpBQ,QAAQC,IAAI,CAAEV,WAAUC,YAExBM,EAAO,CAAEP,WAAUC,UACnBQ,QAAQC,IAAI,CAAEV,WAAUC,U,GAEzBA,E,IA7CPH,EAAQa,iBAAiB,UAEzB,SAAsBC,GACpBA,EAAIC,iBAEJlB,EAASmB,UAAW,EACpB,IAEqBC,EAAjBH,EAAII,cADNC,SAAYC,EAAKH,EAALd,MAAOkB,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAEvBC,EAAUC,OAAOJ,EAAMK,OACvBC,EAASF,OAAOH,EAAKI,OACrBE,EAAWH,OAAOF,EAAOG,OAEzBG,EAAaL,EAAUG,EAASC,EAEpC,GAAIJ,EAAU,GAAKG,EAAS,GAAKC,EAAW,EAErB,YADrBhC,EAAAkC,OAAOC,QAAQ,2BAIjB,IAAK,IAAIC,EAAW,EAAGA,GAAYJ,EAAUI,IAC3C9B,EAAc8B,EAAUR,GAASS,MAAK,SAAAC,G,IAAG/B,EAAQ+B,EAAR/B,SAAUC,EAAK8B,EAAL9B,MACjDR,EAAAkC,OAAOK,QAAQ,uBAAwCC,OAAfjC,EAAS,QAAYiC,OAANhC,EAAM,M,IAE9DiC,OAAM,SAAAH,G,IAAG/B,EAAQ+B,EAAR/B,SAAUC,EAAK8B,EAAL9B,M,OAChBR,EAAAkC,OAAOC,QAAQ,sBAAqCK,OAAfjC,EAAS,QAAYiC,OAANhC,EAAM,M,IAE9DoB,GAAWG,EAEb1B,EAAQqC,QAqBSC,EApBPV,EAqBVlB,YAAW,WACTb,EAASmB,UAAW,C,GACpBsB,GAHJ,IAAmBA,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst startBtn = document.querySelector('button[type=\"submit\"]')\nconst formRef = document.querySelector('form')\n\nformRef.addEventListener('submit', onFormSubmit)\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n  startBtn.disabled = true;\n  const {\n    elements: { delay, step, amount }\n  } = evt.currentTarget;\n  let delayEl = Number(delay.value)\n  let stepEl = Number(step.value)\n  let amountEl = Number(amount.value)\n\n  let totalDelay = delayEl + stepEl * amountEl;\n\n  if (delayEl < 0 || stepEl < 0 || amountEl < 0) {\n    Notify.failure('Заповніть коректні дані')\n    return;\n  }\n\n  for (let position = 1; position <= amountEl; position++){\n    createPromise(position, delayEl).then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n    })\n    .catch(({ position, delay }) =>\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n    );\n    delayEl += stepEl  \n  }\n  formRef.reset();\n  handleBtn(totalDelay);\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  \n  return new Promise((Fulfill, Reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        Fulfill({ position, delay });\n        console.log({ position, delay })\n      } else {\n        Reject({ position, delay });\n        console.log({ position, delay })\n      }\n    }, delay);\n  });\n}\n\n\nfunction handleBtn(total) {\n  setTimeout(() => {\n    startBtn.disabled = false\n  },total)  \n}"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$startBtn","document","querySelector","$ce04d3a99e08e73b$var$formRef","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","Fulfill","Reject","setTimeout","console","log","addEventListener","evt","preventDefault","disabled","_elements","currentTarget","elements","delay1","step","amount","delayEl","Number","value","stepEl","amountEl","totalDelay","Notify","failure","position1","then","param","success","concat","catch","reset","total"],"version":3,"file":"03-promises.f2c46ae5.js.map"}